
package org.tain.cxf.filetransfer.consumer;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2018-09-12T18:06:24.405+09:00
 * Generated source version: 3.0.1
 * 
 */
public final class FileTransferImpl_FileTransferImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://provider.filetransfer.cxf.tain.org/", "FileTransferImplService");

    private FileTransferImpl_FileTransferImplPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = FileTransferImplService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        FileTransferImplService ss = new FileTransferImplService(wsdlURL, SERVICE_NAME);
        FileTransferImpl port = ss.getFileTransferImplPort();  
        
        {
        System.out.println("Invoking upload...");
        java.lang.String _upload_arg0 = "_upload_arg0-1106065872";
        byte[] _upload_arg1 = new byte[] {};
        port.upload(_upload_arg0, _upload_arg1);


        }
        {
        System.out.println("Invoking download...");
        java.lang.String _download_arg0 = "_download_arg01820425198";
        byte[] _download__return = port.download(_download_arg0);
        System.out.println("download.result=" + _download__return);


        }

        System.exit(0);
    }

}
