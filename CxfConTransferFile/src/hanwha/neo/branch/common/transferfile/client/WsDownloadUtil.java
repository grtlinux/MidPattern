
package hanwha.neo.branch.common.transferfile.ws;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

import javax.xml.namespace.QName;
import javax.activation.DataHandler;
import javax.activation.FileDataSource;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import hanwha.neo.commons.Module;
import hanwha.neo.framework.conf.ConfigInitializer;
import hanwha.neo.framework.conf.Global;


/**
 * This class was generated by Apache CXF 2.7.15
 * 2018-02-13T19:05:54.469+09:00
 * Generated source version: 2.7.15
 * 
 */
public final class WsDownloadUtil {

    private static final QName SERVICE_NAME = new QName("http://ws.transferfile.common.branch.neo.hanwha/", "TransferFileServiceImplService");

    private WsDownloadUtil() {
    }
    
    public static String wsUpload(String wsdlUrl, String uploadFilePath) throws java.lang.Exception {
    	String retVal = "SUCCESS";
    	String fileName = "i dont know.";  // 이 후 필요하면 메소드 당형성 이용하여 구현 필요
    	TransferFileService port = getWsTransferFileService(wsdlUrl);

    	try{
    		hanwha.neo.branch.common.transferfile.ws.TransferFile _upload_transferFILE = new hanwha.neo.branch.common.transferfile.ws.TransferFile();
    		
    		String uploadFilePathParan = "";
    		// if DB 의 경로 사용
    		if(uploadFilePath.contains(Module.DIR_BASE_GROUP.getAbsolutePath())) {
    			uploadFilePathParan = uploadFilePath.replace(Module.DIR_BASE_GROUP.getAbsolutePath() + File.separator , "");
        	}
    		
    		File file = new File(uploadFilePath);
    		javax.activation.DataHandler _upload_transferFILEDataHandler = new DataHandler(new FileDataSource(file));
    		_upload_transferFILE.setDataHandler(_upload_transferFILEDataHandler);
    		_upload_transferFILE.setFileName(fileName);
    		_upload_transferFILE.setFilePath(uploadFilePathParan);
    		_upload_transferFILE.setFileSize(""+file.length());
    		java.lang.String _upload__return = port.upload(_upload_transferFILE);
    		retVal = _upload__return;
    		System.out.println("upload.result=" + _upload__return);
    	} catch(Exception e){
			e.printStackTrace();
    		retVal = "FAIL";
    	}

        return retVal;
    }

    public static boolean wsDownload(String wsdlUrl, String downloadFilePath) throws java.lang.Exception {
    	boolean retVal = true;

    	try{
	    	TransferFileService port = getWsTransferFileService(wsdlUrl);  
	        
	        {
	        	System.out.println("Invoking download...");

	        	String _download_filePATH = downloadFilePath;

	        	hanwha.neo.branch.common.transferfile.ws.TransferFile _download__return = port.download(_download_filePATH);
	        	
	        	// if DB 의 경로 사용
	        	_download_filePATH = Module.DIR_BASE_GROUP.getAbsolutePath() + File.separator + _download_filePATH;
	        	
	        	_download__return.setFilePath(_download_filePATH);
	        	WsDownloadUtil.saveAttach(_download__return);
	
	        	// size ��ȿ�� �˻�
	        	System.out.println("download.result=" + _download__return);
	        }

	        retVal = true;
    	}catch(Exception e){
			e.printStackTrace();
    		retVal = false;
    	}

    	return retVal;
    }

    public static boolean wsDownload(String wsdlUrl, String downloadFilePath, boolean isNotGroup) throws java.lang.Exception {
    	boolean retVal = true;

    	try{
	    	TransferFileService port = getWsTransferFileService(wsdlUrl);  
	        
	        {
	        	System.out.println("Invoking download...");

	        	String _download_filePATH = downloadFilePath;
	        	
	        	hanwha.neo.branch.common.transferfile.ws.TransferFile _download__return = port.download(_download_filePATH);
	        	
	        	// if DB 의 경로 사용
	        	if(isNotGroup){
	        		_download_filePATH = Module.DIR_BASE.getAbsolutePath() + File.separator + _download_filePATH;
	        	}else{
	        		_download_filePATH = Module.DIR_BASE_GROUP.getAbsolutePath() + File.separator + _download_filePATH;
	        	}

	        	_download__return.setFilePath(_download_filePATH);
	        	WsDownloadUtil.saveAttach(_download__return);
	
	        	// size ��ȿ�� �˻�
	        	System.out.println("download.result=" + _download__return);
	        }

	        retVal = true;
    	}catch(Exception e){
			e.printStackTrace();
    		retVal = false;
    	}

    	return retVal;
    }

    private static TransferFileService getWsTransferFileService(String wsdlUrl) throws MalformedURLException {
		URL wsdlURL = TransferFileServiceImplService.WSDL_LOCATION;
		//wsdlURL = new URL("http://127.0.0.1:8080/neo/ws/common/transferFile?wsdl");
		//wsdlURL = new URL("http://localhost:8080/TestServerMTOM/services/TransferFileServiceImplPort?wsdl");
		if(wsdlUrl==null || "".equals(wsdlUrl)){
			wsdlUrl = "file:/neo_src/app/neo/WEB-INF/wsdl/transferFile.wsdl";
		}
		wsdlURL = new URL(wsdlUrl);

		TransferFileServiceImplService ss = new TransferFileServiceImplService(wsdlURL, SERVICE_NAME);
		TransferFileService port = ss.getTransferFileServiceImplPort();
		return port;
	}
    
    static void saveAttach(TransferFile attach) throws Exception {
		saveFile(attach.getFilePath(), attach.getDataHandler());
	}

    static void saveFile(String filePath, DataHandler dh) throws Exception {
		File file = new File(filePath);

		if (file.exists())
			return;

		if (!file.getParentFile().exists()) {
			file.getParentFile().mkdirs();
		}
		OutputStream bos = null;
		BufferedInputStream bis = null;
		InputStream is = null;
		FileOutputStream fos = null;
		try {
			is = dh.getInputStream();
			bis = new BufferedInputStream(is);

			fos = new FileOutputStream(file);
			bos = new BufferedOutputStream(fos);
			int i = 0;
			while ((i = bis.read()) != -1) {
				bos.write(i);
			}
			bos.flush();
		} catch (IOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if (is != null){
				try {
					is.close();
				} catch (IOException e) {
					throw e;
				}
			}
			if (bis != null){
				try {
					bis.close();
				} catch (IOException e) {
					throw e;
				}
			}
			if (fos != null){
				try {
					fos.close();
				} catch (IOException e) {
					throw e;
				}
			}
			if (bos != null){
				try {
					bos.close();
				} catch (IOException e) {
					throw e;
				}
			}
		}
	}
    
    
    public static void main(String args[]) throws java.lang.Exception {
    	String wsdlURL = null;
        wsdlURL = "http://127.0.0.1:8080/neo/ws/common/transferFile?wsdl";
        wsdlURL = "http://localhost:8080/TestServerMTOM/services/TransferFileServiceImplPort?wsdl";

//        String uploadFilePath = "/neo_data_eo" + File.separator + "test.docx";
//        String returnString = WsDownloadUtil.wsUpload(wsdlURL, uploadFilePath);
        
        
      String downloadFilePath = "test2.docx";
      WsDownloadUtil.wsDownload(wsdlURL, downloadFilePath);
    	
    	
    }

}
